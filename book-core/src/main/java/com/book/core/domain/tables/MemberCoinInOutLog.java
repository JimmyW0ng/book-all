/*
 * This file is generated by jOOQ.
 */
package com.book.core.domain.tables;


import com.book.core.domain.Book;
import com.book.core.domain.Indexes;
import com.book.core.domain.Keys;
import com.book.core.domain.enums.MemberCoinInOutLogAmountType;
import com.book.core.domain.enums.MemberCoinInOutLogType;
import com.book.core.domain.tables.records.MemberCoinInOutLogRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * 会员虚拟币流水表
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.8"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class MemberCoinInOutLog extends TableImpl<MemberCoinInOutLogRecord> {

    private static final long serialVersionUID = -1439748907;

    /**
     * The reference instance of <code>book.member_coin_in_out_log</code>
     */
    public static final MemberCoinInOutLog MEMBER_COIN_IN_OUT_LOG = new MemberCoinInOutLog();
    /**
     * The column <code>book.member_coin_in_out_log.type</code>. 类型：推荐好友返利、返现
     */
    public final TableField<MemberCoinInOutLogRecord, MemberCoinInOutLogType> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(8).nullable(false).asEnumDataType(com.book.core.domain.enums.MemberCoinInOutLogType.class), this, "类型：推荐好友返利、返现");

    /**
     * The column <code>book.member_coin_in_out_log.id</code>.
     */
    public final TableField<MemberCoinInOutLogRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>book.member_coin_in_out_log.member_id</code>. 会员标识
     */
    public final TableField<MemberCoinInOutLogRecord, Long> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.BIGINT, this, "会员标识");

    /**
     * The column <code>book.member_coin_in_out_log.available_balance</code>. 变更后可用余额
     */
    public final TableField<MemberCoinInOutLogRecord, BigDecimal> AVAILABLE_BALANCE = createField("available_balance", org.jooq.impl.SQLDataType.DECIMAL(12, 2), this, "变更后可用余额");

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MemberCoinInOutLogRecord> getRecordType() {
        return MemberCoinInOutLogRecord.class;
    }

    /**
     * The column <code>book.member_coin_in_out_log.amount</code>. 交易金额
     */
    public final TableField<MemberCoinInOutLogRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.DECIMAL(12, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "交易金额");

    /**
     * The column <code>book.member_coin_in_out_log.amount_type</code>. 收入、支出
     */
    public final TableField<MemberCoinInOutLogRecord, MemberCoinInOutLogAmountType> AMOUNT_TYPE = createField("amount_type", org.jooq.impl.SQLDataType.VARCHAR(6).asEnumDataType(com.book.core.domain.enums.MemberCoinInOutLogAmountType.class), this, "收入、支出");

    /**
     * The column <code>book.member_coin_in_out_log.source_id</code>. 业务id：分润记录id；提现记录id；
     */
    public final TableField<MemberCoinInOutLogRecord, String> SOURCE_ID = createField("source_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "业务id：分润记录id；提现记录id；");

    /**
     * The column <code>book.member_coin_in_out_log.remark</code>.
     */
    public final TableField<MemberCoinInOutLogRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>book.member_coin_in_out_log.create_at</code>. 创建时间
     */
    public final TableField<MemberCoinInOutLogRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>book.member_coin_in_out_log.del_flag</code>. 删除标记
     */
    public final TableField<MemberCoinInOutLogRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标记");

    /**
     * The column <code>book.member_coin_in_out_log.update_at</code>. 更新时间
     */
    public final TableField<MemberCoinInOutLogRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>book.member_coin_in_out_log.version</code>. 版本号
     */
    public final TableField<MemberCoinInOutLogRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "版本号");

    /**
     * Create a <code>book.member_coin_in_out_log</code> table reference
     */
    public MemberCoinInOutLog() {
        this(DSL.name("member_coin_in_out_log"), null);
    }

    /**
     * Create an aliased <code>book.member_coin_in_out_log</code> table reference
     */
    public MemberCoinInOutLog(String alias) {
        this(DSL.name(alias), MEMBER_COIN_IN_OUT_LOG);
    }

    /**
     * Create an aliased <code>book.member_coin_in_out_log</code> table reference
     */
    public MemberCoinInOutLog(Name alias) {
        this(alias, MEMBER_COIN_IN_OUT_LOG);
    }

    private MemberCoinInOutLog(Name alias, Table<MemberCoinInOutLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private MemberCoinInOutLog(Name alias, Table<MemberCoinInOutLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "会员虚拟币流水表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Book.BOOK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MEMBER_COIN_IN_OUT_LOG_INDEX_MEMBER_ID, Indexes.MEMBER_COIN_IN_OUT_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MemberCoinInOutLogRecord, Long> getIdentity() {
        return Keys.IDENTITY_MEMBER_COIN_IN_OUT_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MemberCoinInOutLogRecord> getPrimaryKey() {
        return Keys.KEY_MEMBER_COIN_IN_OUT_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MemberCoinInOutLogRecord>> getKeys() {
        return Arrays.<UniqueKey<MemberCoinInOutLogRecord>>asList(Keys.KEY_MEMBER_COIN_IN_OUT_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TableField<MemberCoinInOutLogRecord, Long> getRecordVersion() {
        return VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberCoinInOutLog as(String alias) {
        return new MemberCoinInOutLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberCoinInOutLog as(Name alias) {
        return new MemberCoinInOutLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MemberCoinInOutLog rename(String name) {
        return new MemberCoinInOutLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MemberCoinInOutLog rename(Name name) {
        return new MemberCoinInOutLog(name, null);
    }
}
