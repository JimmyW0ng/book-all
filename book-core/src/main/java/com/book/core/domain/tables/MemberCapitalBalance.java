/*
 * This file is generated by jOOQ.
 */
package com.book.core.domain.tables;


import com.book.core.domain.Book;
import com.book.core.domain.Indexes;
import com.book.core.domain.Keys;
import com.book.core.domain.tables.records.MemberCapitalBalanceRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * 会员资金余额表
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.8"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class MemberCapitalBalance extends TableImpl<MemberCapitalBalanceRecord> {

    private static final long serialVersionUID = 1961827457;

    /**
     * The reference instance of <code>book.member_capital_balance</code>
     */
    public static final MemberCapitalBalance MEMBER_CAPITAL_BALANCE = new MemberCapitalBalance();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MemberCapitalBalanceRecord> getRecordType() {
        return MemberCapitalBalanceRecord.class;
    }

    /**
     * The column <code>book.member_capital_balance.id</code>. 主键
     */
    public final TableField<MemberCapitalBalanceRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>book.member_capital_balance.member_id</code>. 会员标识
     */
    public final TableField<MemberCapitalBalanceRecord, Long> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "会员标识");

    /**
     * The column <code>book.member_capital_balance.balance</code>. 总余额
     */
    public final TableField<MemberCapitalBalanceRecord, BigDecimal> BALANCE = createField("balance", org.jooq.impl.SQLDataType.DECIMAL(12, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "总余额");

    /**
     * The column <code>book.member_capital_balance.available_balance</code>. 可用余额
     */
    public final TableField<MemberCapitalBalanceRecord, BigDecimal> AVAILABLE_BALANCE = createField("available_balance", org.jooq.impl.SQLDataType.DECIMAL(12, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "可用余额");

    /**
     * The column <code>book.member_capital_balance.remark</code>. 备注
     */
    public final TableField<MemberCapitalBalanceRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(255), this, "备注");

    /**
     * The column <code>book.member_capital_balance.create_at</code>. 创建时间
     */
    public final TableField<MemberCapitalBalanceRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>book.member_capital_balance.update_at</code>. 更新时间
     */
    public final TableField<MemberCapitalBalanceRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>book.member_capital_balance.del_flag</code>. 删除标志
     */
    public final TableField<MemberCapitalBalanceRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>book.member_capital_balance.version</code>.
     */
    public final TableField<MemberCapitalBalanceRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>book.member_capital_balance</code> table reference
     */
    public MemberCapitalBalance() {
        this(DSL.name("member_capital_balance"), null);
    }

    /**
     * Create an aliased <code>book.member_capital_balance</code> table reference
     */
    public MemberCapitalBalance(String alias) {
        this(DSL.name(alias), MEMBER_CAPITAL_BALANCE);
    }

    /**
     * Create an aliased <code>book.member_capital_balance</code> table reference
     */
    public MemberCapitalBalance(Name alias) {
        this(alias, MEMBER_CAPITAL_BALANCE);
    }

    private MemberCapitalBalance(Name alias, Table<MemberCapitalBalanceRecord> aliased) {
        this(alias, aliased, null);
    }

    private MemberCapitalBalance(Name alias, Table<MemberCapitalBalanceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "会员资金余额表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Book.BOOK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MEMBER_CAPITAL_BALANCE_PRIMARY, Indexes.MEMBER_CAPITAL_BALANCE_UNIQUE_MEMBER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MemberCapitalBalanceRecord, Long> getIdentity() {
        return Keys.IDENTITY_MEMBER_CAPITAL_BALANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MemberCapitalBalanceRecord> getPrimaryKey() {
        return Keys.KEY_MEMBER_CAPITAL_BALANCE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MemberCapitalBalanceRecord>> getKeys() {
        return Arrays.<UniqueKey<MemberCapitalBalanceRecord>>asList(Keys.KEY_MEMBER_CAPITAL_BALANCE_PRIMARY, Keys.KEY_MEMBER_CAPITAL_BALANCE_UNIQUE_MEMBER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TableField<MemberCapitalBalanceRecord, Long> getRecordVersion() {
        return VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberCapitalBalance as(String alias) {
        return new MemberCapitalBalance(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberCapitalBalance as(Name alias) {
        return new MemberCapitalBalance(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MemberCapitalBalance rename(String name) {
        return new MemberCapitalBalance(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MemberCapitalBalance rename(Name name) {
        return new MemberCapitalBalance(name, null);
    }
}
