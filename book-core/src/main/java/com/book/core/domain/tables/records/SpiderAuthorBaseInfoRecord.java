/*
 * This file is generated by jOOQ.
 */
package com.book.core.domain.tables.records;


import com.book.core.domain.tables.SpiderAuthorBaseInfo;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;


/**
 * 爬虫-作者基础信息表
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.8"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class SpiderAuthorBaseInfoRecord extends UpdatableRecordImpl<SpiderAuthorBaseInfoRecord> implements Record7<Long, String, Timestamp, Timestamp, String, Boolean, Long> {

    private static final long serialVersionUID = -691286742;

    /**
     * Create a detached SpiderAuthorBaseInfoRecord
     */
    public SpiderAuthorBaseInfoRecord() {
        super(SpiderAuthorBaseInfo.SPIDER_AUTHOR_BASE_INFO);
    }

    /**
     * Create a detached, initialised SpiderAuthorBaseInfoRecord
     */
    public SpiderAuthorBaseInfoRecord(Long id, String name, Timestamp createAt, Timestamp updateAt, String remark, Boolean delFlag, Long version) {
        super(SpiderAuthorBaseInfo.SPIDER_AUTHOR_BASE_INFO);

        set(0, id);
        set(1, name);
        set(2, createAt);
        set(3, updateAt);
        set(4, remark);
        set(5, delFlag);
        set(6, version);
    }

    /**
     * Getter for <code>book.spider_author_base_info.id</code>. 主键
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>book.spider_author_base_info.id</code>. 主键
     */
    public SpiderAuthorBaseInfoRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>book.spider_author_base_info.name</code>. 笔名
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>book.spider_author_base_info.name</code>. 笔名
     */
    public SpiderAuthorBaseInfoRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>book.spider_author_base_info.create_at</code>. 创建时间
     */
    public Timestamp getCreateAt() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>book.spider_author_base_info.create_at</code>. 创建时间
     */
    public SpiderAuthorBaseInfoRecord setCreateAt(Timestamp value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>book.spider_author_base_info.update_at</code>. 更新时间
     */
    public Timestamp getUpdateAt() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>book.spider_author_base_info.update_at</code>. 更新时间
     */
    public SpiderAuthorBaseInfoRecord setUpdateAt(Timestamp value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>book.spider_author_base_info.remark</code>. 备注
     */
    public String getRemark() {
        return (String) get(4);
    }

    /**
     * Setter for <code>book.spider_author_base_info.remark</code>. 备注
     */
    public SpiderAuthorBaseInfoRecord setRemark(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>book.spider_author_base_info.del_flag</code>. 删除标记
     */
    public Boolean getDelFlag() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>book.spider_author_base_info.del_flag</code>. 删除标记
     */
    public SpiderAuthorBaseInfoRecord setDelFlag(Boolean value) {
        set(5, value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>book.spider_author_base_info.version</code>. 版本号
     */
    public Long getVersion() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>book.spider_author_base_info.version</code>. 版本号
     */
    public SpiderAuthorBaseInfoRecord setVersion(Long value) {
        set(6, value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, Timestamp, Timestamp, String, Boolean, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, Timestamp, Timestamp, String, Boolean, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return SpiderAuthorBaseInfo.SPIDER_AUTHOR_BASE_INFO.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return SpiderAuthorBaseInfo.SPIDER_AUTHOR_BASE_INFO.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return SpiderAuthorBaseInfo.SPIDER_AUTHOR_BASE_INFO.CREATE_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return SpiderAuthorBaseInfo.SPIDER_AUTHOR_BASE_INFO.UPDATE_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return SpiderAuthorBaseInfo.SPIDER_AUTHOR_BASE_INFO.REMARK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field6() {
        return SpiderAuthorBaseInfo.SPIDER_AUTHOR_BASE_INFO.DEL_FLAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field7() {
        return SpiderAuthorBaseInfo.SPIDER_AUTHOR_BASE_INFO.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getCreateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getUpdateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getRemark();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component6() {
        return getDelFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component7() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getCreateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getUpdateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getRemark();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value6() {
        return getDelFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value7() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderAuthorBaseInfoRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderAuthorBaseInfoRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderAuthorBaseInfoRecord value3(Timestamp value) {
        setCreateAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderAuthorBaseInfoRecord value4(Timestamp value) {
        setUpdateAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderAuthorBaseInfoRecord value5(String value) {
        setRemark(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderAuthorBaseInfoRecord value6(Boolean value) {
        setDelFlag(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderAuthorBaseInfoRecord value7(Long value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderAuthorBaseInfoRecord values(Long value1, String value2, Timestamp value3, Timestamp value4, String value5, Boolean value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }
}
