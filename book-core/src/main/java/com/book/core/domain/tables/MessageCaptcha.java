/*
 * This file is generated by jOOQ.
*/
package com.book.core.domain.tables;


import com.book.core.domain.Book;
import com.book.core.domain.Indexes;
import com.book.core.domain.Keys;
import com.book.core.domain.enums.MessageCaptchaScene;
import com.book.core.domain.enums.MessageCaptchaType;
import com.book.core.domain.tables.records.MessageCaptchaRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * 消息-验证码表
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.8"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class MessageCaptcha extends TableImpl<MessageCaptchaRecord> {

    private static final long serialVersionUID = -1828673212;

    /**
     * The reference instance of <code>book.message_captcha</code>
     */
    public static final MessageCaptcha MESSAGE_CAPTCHA = new MessageCaptcha();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MessageCaptchaRecord> getRecordType() {
        return MessageCaptchaRecord.class;
    }

    /**
     * The column <code>book.message_captcha.id</code>. 主键
     */
    public final TableField<MessageCaptchaRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>book.message_captcha.type</code>. 类型：短信
     */
    public final TableField<MessageCaptchaRecord, MessageCaptchaType> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(9).nullable(false).asEnumDataType(com.book.core.domain.enums.MessageCaptchaType.class), this, "类型：短信");

    /**
     * The column <code>book.message_captcha.source_id</code>. 业务标识
     */
    public final TableField<MessageCaptchaRecord, Long> SOURCE_ID = createField("source_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "业务标识");

    /**
     * The column <code>book.message_captcha.code</code>. 业务编码
     */
    public final TableField<MessageCaptchaRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "业务编码");

    /**
     * The column <code>book.message_captcha.content</code>. 验证码内容
     */
    public final TableField<MessageCaptchaRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "验证码内容");

    /**
     * The column <code>book.message_captcha.scene</code>. 验证场景：账户注册；
     */
    public final TableField<MessageCaptchaRecord, MessageCaptchaScene> SCENE = createField("scene", org.jooq.impl.SQLDataType.VARCHAR(15).nullable(false).asEnumDataType(com.book.core.domain.enums.MessageCaptchaScene.class), this, "验证场景：账户注册；");

    /**
     * The column <code>book.message_captcha.client_id</code>. 客户端标识
     */
    public final TableField<MessageCaptchaRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "客户端标识");

    /**
     * The column <code>book.message_captcha.expire_time</code>. 过期时间
     */
    public final TableField<MessageCaptchaRecord, Timestamp> EXPIRE_TIME = createField("expire_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "过期时间");

    /**
     * The column <code>book.message_captcha.ip</code>. 访问ip
     */
    public final TableField<MessageCaptchaRecord, String> IP = createField("ip", org.jooq.impl.SQLDataType.VARCHAR(255), this, "访问ip");

    /**
     * The column <code>book.message_captcha.create_at</code>. 创建时间
     */
    public final TableField<MessageCaptchaRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>book.message_captcha.update_at</code>. 更新时间
     */
    public final TableField<MessageCaptchaRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>book.message_captcha.remark</code>. 备注
     */
    public final TableField<MessageCaptchaRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(255), this, "备注");

    /**
     * The column <code>book.message_captcha.del_flag</code>. 删除标记
     */
    public final TableField<MessageCaptchaRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标记");

    /**
     * The column <code>book.message_captcha.version</code>.
     */
    public final TableField<MessageCaptchaRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>book.message_captcha</code> table reference
     */
    public MessageCaptcha() {
        this(DSL.name("message_captcha"), null);
    }

    /**
     * Create an aliased <code>book.message_captcha</code> table reference
     */
    public MessageCaptcha(String alias) {
        this(DSL.name(alias), MESSAGE_CAPTCHA);
    }

    /**
     * Create an aliased <code>book.message_captcha</code> table reference
     */
    public MessageCaptcha(Name alias) {
        this(alias, MESSAGE_CAPTCHA);
    }

    private MessageCaptcha(Name alias, Table<MessageCaptchaRecord> aliased) {
        this(alias, aliased, null);
    }

    private MessageCaptcha(Name alias, Table<MessageCaptchaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "消息-验证码表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Book.BOOK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MESSAGE_CAPTCHA_INDEX_EXPIRE_TIME, Indexes.MESSAGE_CAPTCHA_INDEX_IP, Indexes.MESSAGE_CAPTCHA_INDEX_SOURCE_ID, Indexes.MESSAGE_CAPTCHA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MessageCaptchaRecord, Long> getIdentity() {
        return Keys.IDENTITY_MESSAGE_CAPTCHA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MessageCaptchaRecord> getPrimaryKey() {
        return Keys.KEY_MESSAGE_CAPTCHA_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MessageCaptchaRecord>> getKeys() {
        return Arrays.<UniqueKey<MessageCaptchaRecord>>asList(Keys.KEY_MESSAGE_CAPTCHA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TableField<MessageCaptchaRecord, Long> getRecordVersion() {
        return VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageCaptcha as(String alias) {
        return new MessageCaptcha(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageCaptcha as(Name alias) {
        return new MessageCaptcha(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MessageCaptcha rename(String name) {
        return new MessageCaptcha(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MessageCaptcha rename(Name name) {
        return new MessageCaptcha(name, null);
    }
}
