/*
 * This file is generated by jOOQ.
 */
package com.book.core.domain.tables.records;


import com.book.core.domain.tables.SpiderBookDetailInfo;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;


/**
 * 爬虫-图书内容
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.8"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class SpiderBookDetailInfoRecord extends UpdatableRecordImpl<SpiderBookDetailInfoRecord> implements Record9<Long, Long, String, String, Timestamp, Timestamp, String, Boolean, Long> {

    private static final long serialVersionUID = 2018568488;

    /**
     * Setter for <code>book.spider_book_detail_info.id</code>. 主键
     */
    public SpiderBookDetailInfoRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Create a detached SpiderBookDetailInfoRecord
     */
    public SpiderBookDetailInfoRecord() {
        super(SpiderBookDetailInfo.SPIDER_BOOK_DETAIL_INFO);
    }

    /**
     * Setter for <code>book.spider_book_detail_info.book_id</code>. 书本id
     */
    public SpiderBookDetailInfoRecord setBookId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Create a detached, initialised SpiderBookDetailInfoRecord
     */
    public SpiderBookDetailInfoRecord(Long id, Long bookId, String chapterTitle, String chapterContent, Timestamp createAt, Timestamp updateAt, String remark, Boolean delFlag, Long version) {
        super(SpiderBookDetailInfo.SPIDER_BOOK_DETAIL_INFO);

        set(0, id);
        set(1, bookId);
        set(2, chapterTitle);
        set(3, chapterContent);
        set(4, createAt);
        set(5, updateAt);
        set(6, remark);
        set(7, delFlag);
        set(8, version);
    }

    /**
     * Setter for <code>book.spider_book_detail_info.chapter_title</code>. 章节名
     */
    public SpiderBookDetailInfoRecord setChapterTitle(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>book.spider_book_detail_info.id</code>. 主键
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>book.spider_book_detail_info.chapter_content</code>. 章节内容
     */
    public SpiderBookDetailInfoRecord setChapterContent(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>book.spider_book_detail_info.book_id</code>. 书本id
     */
    public Long getBookId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>book.spider_book_detail_info.create_at</code>. 创建时间
     */
    public SpiderBookDetailInfoRecord setCreateAt(Timestamp value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>book.spider_book_detail_info.chapter_title</code>. 章节名
     */
    public String getChapterTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>book.spider_book_detail_info.update_at</code>. 更新时间
     */
    public SpiderBookDetailInfoRecord setUpdateAt(Timestamp value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>book.spider_book_detail_info.chapter_content</code>. 章节内容
     */
    public String getChapterContent() {
        return (String) get(3);
    }

    /**
     * Setter for <code>book.spider_book_detail_info.remark</code>. 备注
     */
    public SpiderBookDetailInfoRecord setRemark(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>book.spider_book_detail_info.remark</code>. 备注
     */
    public String getRemark() {
        return (String) get(6);
    }

    /**
     * Getter for <code>book.spider_book_detail_info.create_at</code>. 创建时间
     */
    public Timestamp getCreateAt() {
        return (Timestamp) get(4);
    }

    /**
     * Getter for <code>book.spider_book_detail_info.update_at</code>. 更新时间
     */
    public Timestamp getUpdateAt() {
        return (Timestamp) get(5);
    }

    /**
     * Getter for <code>book.spider_book_detail_info.del_flag</code>. 删除标记
     */
    public Boolean getDelFlag() {
        return (Boolean) get(7);
    }

    /**
     * Getter for <code>book.spider_book_detail_info.version</code>. 版本号
     */
    public Long getVersion() {
        return (Long) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Long, Long, String, String, Timestamp, Timestamp, String, Boolean, Long> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Long, Long, String, String, Timestamp, Timestamp, String, Boolean, Long> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return SpiderBookDetailInfo.SPIDER_BOOK_DETAIL_INFO.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return SpiderBookDetailInfo.SPIDER_BOOK_DETAIL_INFO.BOOK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return SpiderBookDetailInfo.SPIDER_BOOK_DETAIL_INFO.CHAPTER_TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return SpiderBookDetailInfo.SPIDER_BOOK_DETAIL_INFO.CHAPTER_CONTENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return SpiderBookDetailInfo.SPIDER_BOOK_DETAIL_INFO.CREATE_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return SpiderBookDetailInfo.SPIDER_BOOK_DETAIL_INFO.UPDATE_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return SpiderBookDetailInfo.SPIDER_BOOK_DETAIL_INFO.REMARK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field8() {
        return SpiderBookDetailInfo.SPIDER_BOOK_DETAIL_INFO.DEL_FLAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field9() {
        return SpiderBookDetailInfo.SPIDER_BOOK_DETAIL_INFO.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getBookId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getChapterTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getChapterContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getCreateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getUpdateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getRemark();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component8() {
        return getDelFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component9() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getBookId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getChapterTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getChapterContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getCreateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getUpdateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getRemark();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value8() {
        return getDelFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value9() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderBookDetailInfoRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderBookDetailInfoRecord value2(Long value) {
        setBookId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderBookDetailInfoRecord value3(String value) {
        setChapterTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderBookDetailInfoRecord value4(String value) {
        setChapterContent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderBookDetailInfoRecord value5(Timestamp value) {
        setCreateAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderBookDetailInfoRecord value6(Timestamp value) {
        setUpdateAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderBookDetailInfoRecord value7(String value) {
        setRemark(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderBookDetailInfoRecord value8(Boolean value) {
        setDelFlag(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderBookDetailInfoRecord value9(Long value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderBookDetailInfoRecord values(Long value1, Long value2, String value3, String value4, Timestamp value5, Timestamp value6, String value7, Boolean value8, Long value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>book.spider_book_detail_info.del_flag</code>. 删除标记
     */
    public SpiderBookDetailInfoRecord setDelFlag(Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Setter for <code>book.spider_book_detail_info.version</code>. 版本号
     */
    public SpiderBookDetailInfoRecord setVersion(Long value) {
        set(8, value);
        return this;
    }
}
